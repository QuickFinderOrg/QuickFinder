@page
@model Student.CourseOverviewModel
@inject UserService userService;
@{
    ViewData["Title"] = "Course Overview";
    var returnUrl = Request.Path + Request.QueryString;
}

<a asp-page="@StudentRoutes.Matching()">Go Back</a>

<div class="text-center">
    @if (Model.Course is null)
    {
        <p>No course selected</p>
    }
    else
    {

        <h1 class="display-4">Course overview for @Model.Course.Name</h1>

        <div class="d-flex justify-content-center gap-1">
            <a asp-page="@StudentRoutes.CoursePreferences()" asp-route-courseId="@Model.Course.Id">
                <button class="btn btn-primary btn-sm">Change preferences</button></a>
            @if (Model.Group == null)
            {
                <a asp-page="@StudentRoutes.CreateGroup()" asp-route-courseId="@Model.Course.Id"
                    asp-route-returnUrl="@returnUrl">
                    <button class="btn btn-primary btn-sm" type="submit">Create Group</button>
                </a>
            }
        </div>

        @if (Model.Group != null)
        {
            <br></br>

            <h1>Your group</h1>
            <table class="table table-striped border align-middle shadow-sm rounded">
                <thead class="table-light">
                    <tr>
                        <th>Name</th>
                        <th>Course</th>
                        <th>Members</th>
                        <th>Complete</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@Model.Group.Name</td>
                        <td>@Model.Group.Course.Name</td>
                        <td>
                            @foreach (var member in Model.Group.Members)
                            {
                                <span class="badge bg-secondary">@await userService.GetName(member)</span>
                            }
                        </td>
                        <td>
                            <span class="badge @(Model.Group.Members.Count == Model.Group.GroupLimit ? "bg-success" : "bg-warning text-dark")">
                                @Model.Group.Members.Count / @Model.Group.GroupLimit
                            </span>
                        </td>
                        <td>
                            <form asp-page-handler="LeaveGroup" asp-route-groupId="@Model.Group.Id" method="post">
                                <input hidden asp-for="Course.Id">
                                <button type="submit" class="btn btn-danger btn-sm">Leave Group</button>
                            </form>
                        </td>
                    </tr>
                </tbody>
            </table>
        }

        <br></br>

        <h1>Groups</h1>
        <table class="table table-striped border align-middle shadow-sm rounded">
            <thead class="table-light">
                <tr>
                    <th>Name</th>
                    <th>Course</th>
                    <th>Members</th>
                    <th>Complete</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var group in Model.Groups)
                {
                    <tr>
                        <td>@group.Name</td>
                        <td>@group.Course.Name</td>
                        <td>
                            @foreach (var member in group.Members)
                            {
                                <span class="badge bg-secondary">@await userService.GetName(member)</span>
                            }
                        </td>
                        <td>
                            <span class="badge @(group.Members.Count == group.GroupLimit ? "bg-success" : "bg-warning text-dark")">
                                @group.Members.Count / @group.GroupLimit
                            </span>
                        </td>
                        <td>
                            @if (group.AllowAnyone && group.Members.Count < group.GroupLimit && Model.Group == null)
                            {
                                <form asp-page-handler="JoinGroup" asp-route-groupId="@group.Id" method="post">
                                    <input hidden asp-for="Course.Id">
                                    <button type="submit" class="btn btn-primary btn-sm">Join Group</button>
                                </form>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    }
</div>