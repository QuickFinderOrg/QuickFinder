@page
@using QuickFinder.Domain.Matchmaking
@model MatchingModel
@inject UserManager<User> userManager
@inject MatchmakingService matchmakingService
@{
    ViewData["Title"] = "Matchmaking";

    var user = await userManager.GetUserAsync(User);
}

<div class="text-center">
    <h1 class="display-4">Matchmaking</h1>
    <p>Courses</p>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        </div>
    }

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Course in Model.Courses)
            {
                <tr>
                    <td>@Course.Name</td>
                    @if(user != null && !Course.Members.Contains(user)){
                        <td class="d-flex justify-content-center gap-2">
                            <form asp-page-handler="JoinCourse" method="post">
                                <input name="CourseId" hidden value="@Course.Id">
                                <button type="submit">Join Course</button>
                            </form>
                        </td>
                    }
                    else {
                        <td class="d-flex justify-content-center gap-2">
                            @if(user != null && !await matchmakingService.CheckIfInGroup(user, Course))
                            {
                                <form asp-page-handler="FindGroup" method="post">
                                    <input name="CourseId" hidden value="@Course.Id">
                                    <button type="submit">Find Group</button>
                                </form>

                                <a asp-page="@StudentRoutes.JoinGroup()" asp-route-id="@Course.Id"><button>Join/Create
                                        Group</button></a>

                                <a asp-page="@StudentRoutes.CourseOverview()" asp-route-courseId="@Course.Id"><button>Overview</button></a>
                            }
                            
                            <form asp-page-handler="LeaveCourse" method="post">
                                <input name="CourseId" hidden value="@Course.Id">
                                <button type="submit">Leave Course</button>
                            </form>                            
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>

    <a href="@StudentRoutes.Groups()">Go To groups</a>
</div>
