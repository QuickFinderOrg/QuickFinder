@page
@model TestModel
@using Domain.DiscordDomain
@using Domain.Matchmaking
@inject DiscordService discord
@inject UserService userService
@inject UserManager<User> userManager
@inject MatchmakingService matchmakingService
@{
    ViewData["Title"] = "Test";
    var headers = HttpContext.Request.Headers.Select(h => $"{h.Key}: {h.Value}");
    var user = await userManager.GetUserAsync(User) ?? throw new Exception("User not found");
    var discordUserId = await userService.GetDiscordId(user.Id);

    var matchmaker = new Matchmaker2<DefaultUserMatchmakingData, DefaultGroupMatchmakingData>(new MatchmakerConfig2());
    var seed = new DefaultUserMatchmakingData
    {
        Languages = LanguageFlags.English | LanguageFlags.Norwegian,
        Availability = Availability.Daytime,
        UserId = "Joseph Seed",
        Days = DaysOfTheWeek.Monday
    };
    var candidates = Enumerable.Range(1, 20).Select(i => new DefaultUserMatchmakingData
    {
        Languages = i % 2 == 0 ? LanguageFlags.Norwegian : LanguageFlags.English,
        Availability = Availability.Daytime,
        UserId = i % 2 == 0 ? LanguageFlags.Norwegian.ToString() : LanguageFlags.English.ToString(),
        Days = DaysOfTheWeek.Monday
    }).ToArray();

    var time_pre = DateTime.Now;
    var groupMembersToFind = 3;
    var matched_members = matchmaker.Match2(seed, candidates, groupMembersToFind).Select(m =>
    (DefaultUserMatchmakingData)m);
    DefaultUserMatchmakingData[] matched_group = [seed, .. matched_members];
    var timer = DateTime.Now - time_pre;
    var a = LanguageFlags.Norwegian | LanguageFlags.English;
    var b = LanguageFlags.English | LanguageFlags.Norwegian;
}

<h2>Test</h2>
<p>@a</p>
<p>@b</p>
<p>@a.IntersectWith(b) @a.IntersectWith(b).Count() </p>

<div style="border:  2px solid rgb(174, 4, 4); border-radius: 5px; padding: 4px;">
    @foreach (var member in matched_group)
    {
        <p>@member.ToString()</p>
    }
</div>

<form method="post">
    <input name="id" value="@discordUserId">
    <button type="submit">send DM</button>
</form>

@foreach (var member in candidates)
{
    <p>@member.ToString()</p>
}

@($"{HttpContext.Request.Scheme}://{HttpContext.Request.Host}{HttpContext.Request.Path}{HttpContext.Request.QueryString}")

<details title="Headers">
    <summary>Headers</summary>

    @foreach (var val in headers)
    {
        <p>@val</p>
    }
</details>

<form method="post">
    <button type="submit">TEST</button>
</form>
<p>@Model.TestResult</p>

<p>Current Timestamp: @DateTime.Now</p>
<p>@timer.TotalSeconds seconds spent matchmaking</p>



<details>



    <form method="post" asp-page-handler="AddServer">
        <input id="serverId" name="serverId" />
        <button type="submit">
            Add
        </button>
    </form>
</details>


<h2>Course Servers</h2>
<section style="border:  2px solid rgb(174, 4, 4); border-radius: 5px; padding: 4px;">

    @foreach (var server in await discord.GetServerList())
    {
        <p>@server.Name (@server.Id)</p>
    }

    <form method="post" asp-page-handler="AddServer">
        <input id="serverId" name="serverId" />
        <button type="submit">
            Add
        </button>
    </form>
</section>

<h2>Bot Servers</h2>
<section style="border:  2px solid rgb(174, 112, 4); border-radius: 5px; padding: 4px;">

    @foreach (var server in discord.GetBotServers())
    {
        <p>@server.Name (@server.Id)</p>
    }
</section>

<h2>servers that be added</h2>
<section style="border:  2px solid rgb(4, 146, 174); border-radius: 5px; padding: 4px;">

    @foreach (var server in discord.GetServersThatCanBeAdded((ulong)discordUserId))
    {
        <div style="display: flex;">
            <p>@server.Name (@server.Id)</p>
            <form method="post" asp-page-handler="AddServer" asp-route-serverId="@server.Id">
                <button type="submit">
                    Add
                </button>
            </form>
        </div>
    }

</section>

<a href="@discord.InviteURL" target="_blank">Invite Bot</a>

<h2>Channels</h2>

<section style="border:  2px solid rgb(4, 174, 44); border-radius: 5px; padding: 4px;">
    @foreach (var channel in discord.GetChannels())
    {
        <div style="display: flex;">
            <p>@channel.Name (@channel.Id) @channel.Category</p>
            <form method="post" asp-page-handler="DeleteChannel" asp-route-id="@channel.Id">
                <button type="submit">
                    X
                </button>
            </form>
            <form method="post" asp-page-handler="SetChannelPermissions" asp-route-id="@channel.Id">
                <button type="submit">
                    Perms
                </button>
            </form>
        </div>


    }


</section>
